// Cloud Storage Security Rules for AmaPlayer
rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Profile images
    match /profile-images/{userId} {
      allow read: if true;
      allow write: if request.auth != null 
        && request.auth.uid == userId
        && validateImageFile();
    }
    
    // Post images
    match /posts/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && validateImageFile();
    }
    
    // Post videos
    match /post-videos/{userId}/{fileName} {
      allow read: if true;
      allow write: if request.auth != null 
        && request.auth.uid == userId
        && validateVideoFile();
    }
    
    // Athlete highlights
    match /athlete-highlights/{userId}/{fileName} {
      allow read: if true;
      allow write: if request.auth != null 
        && request.auth.uid == userId
        && validateVideoFile();
    }
    
    // Training sessions
    match /training-sessions/{userId}/{fileName} {
      allow read: if true;
      allow write: if request.auth != null 
        && request.auth.uid == userId
        && validateVideoFile();
    }
    
    // Competitions
    match /competitions/{userId}/{fileName} {
      allow read: if true;
      allow write: if request.auth != null 
        && request.auth.uid == userId
        && validateVideoFile();
    }
    
    // Helper functions
    function validateImageFile() {
      return request.resource.size < 10 * 1024 * 1024 // 10MB limit
        && request.resource.contentType.matches('image/.*');
    }
    
    function validateVideoFile() {
      return request.resource.size < 100 * 1024 * 1024 // 100MB limit
        && request.resource.contentType.matches('video/.*');
    }
  }
}